@page "/register"
@using EmploymentAgency.DTO.WebShop

@inject IAuthService AuthService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<div class="container pa-4">
    <div class="row">
        <div class="col-sm"></div>
        <div class="col-sm">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Register</h5>
                    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                        <DataAnnotationsValidator />
                        <div class="form-group">
                            <MudTextField Label="First Name" @bind-Value="model.FirstName" Class="form-control" For="@(() => model.FirstName)"/>
                        </div>
                        <div class="form-group">
                            <MudTextField Label="Last Name" @bind-Value="model.LastName" Class="form-control" For="@(() => model.LastName)"/>
                        </div>
                        <div class="form-group">
                            <MudTextField Label="Email" @bind-Value="model.Email" Class="form-control" For="@(() => model.Email)"/>
                        </div>
                        <div class="form-group">
                            <MudTextField Label="Username" @bind-Value="model.Username" Class="form-control" For="@(() => model.Username)"/>
                        </div>
                        <div class="form-group">
                            <MudTextField Label="Password" @bind-Value="model.Password" InputType="InputType.Password" Class="form-control" For="@(() => model.Password)"/>
                        </div>
                        <div class="form-group">
                            <MudTextField Label="Confirm Password" @bind-Value="model.ConfirmPassword" InputType="InputType.Password" Class="form-control" For="@(() => model.ConfirmPassword)"/>
                        </div>
                        <div class="pa-2">
                            <MudButton Disabled="@loading" Variant="Variant.Filled" Color="Color.Secondary" ButtonType="ButtonType.Submit" >
                                @if (loading) 
                                {
                                    <span class="spinner-border spinner-border-sm mr-1"></span>
                                }
                                Register
                            </MudButton>
                            <MudButton Href="/login">Login</MudButton>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
        <div class="col-sm"></div>
    </div>
</div>

@code {
    private UserDTO model = new UserDTO();
    private bool loading;

    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            var success =await AuthService.Register(model);
            if (success)
            {
                Snackbar.Add("Successfully registered!", Severity.Success);
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                loading = false;
                Snackbar.Add("Some exception ocurred", Severity.Error);
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            loading = false;
            Snackbar.Add(ex.Message, Severity.Error);
            StateHasChanged();
        }
    }
}
